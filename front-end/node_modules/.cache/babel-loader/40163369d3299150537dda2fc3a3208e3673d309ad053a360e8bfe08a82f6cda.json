{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josue\\\\Desktop\\\\produccion\\\\front-end\\\\src\\\\components\\\\OperarioView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, FormControl, Table, TableBody, TableCell, TableHead, TableRow, IconButton, Snackbar } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport * as XLSX from 'xlsx';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JefeView = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    NoTela: '',\n    Talla: '',\n    Color: '',\n    Estilo: '',\n    Estado: ''\n  });\n  const [inventarios, setInventarios] = useState([]);\n  const [openSnackbar, setOpenSnackbar] = useState(false); // Estado para el Snackbar\n  const [snackbarMessage, setSnackbarMessage] = useState(''); // Mensaje del Snackbar\n\n  // Obtener los datos de la base de datos cuando el componente se monte\n  useEffect(() => {\n    fetchInventarios();\n  }, []);\n  const fetchInventarios = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/inventario');\n      setInventarios(response.data);\n    } catch (error) {\n      console.error('Error al obtener inventarios:', error);\n    }\n  };\n\n  // Manejar cambios en el formulario\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Enviar el formulario para guardar los datos en la base de datos\n  const handleSubmit = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/inventario', formData);\n      fetchInventarios(); // Volver a obtener los datos para que la tabla se actualice\n      setFormData({\n        NoTela: '',\n        Talla: '',\n        Color: '',\n        Estilo: '',\n        Estado: ''\n      }); // Limpiar el formulario\n      setSnackbarMessage('Inventario guardado exitosamente'); // Definir el mensaje\n      setOpenSnackbar(true); // Abrir el Snackbar\n    } catch (error) {\n      console.error('Error al guardar inventario:', error);\n      setSnackbarMessage('Error al guardar el inventario');\n      setOpenSnackbar(true);\n    }\n  };\n\n  // Eliminar un inventario por su ID\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/inventario/${id}`);\n      fetchInventarios(); // Volver a obtener los datos para que la tabla se actualice\n      setSnackbarMessage('Inventario eliminado exitosamente');\n      setOpenSnackbar(true);\n    } catch (error) {\n      console.error('Error al eliminar inventario:', error);\n      setSnackbarMessage('Error al eliminar el inventario');\n      setOpenSnackbar(true);\n    }\n  };\n\n  // Exportar la tabla a un archivo Excel\n  const handleExportExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(inventarios);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Inventarios');\n    XLSX.writeFile(workbook, 'inventarios.xlsx');\n  };\n\n  // Manejar el cierre del Snackbar\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      style: {\n        width: '50%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"No. de Tela\",\n        name: \"NoTela\",\n        value: formData.NoTela,\n        onChange: handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Talla\",\n        name: \"Talla\",\n        value: formData.Talla,\n        onChange: handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Color\",\n        name: \"Color\",\n        value: formData.Color,\n        onChange: handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Estilo\",\n        name: \"Estilo\",\n        value: formData.Estilo,\n        onChange: handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Estado\",\n        name: \"Estado\",\n        value: formData.Estado,\n        onChange: handleChange,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Guardar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 3000,\n      onClose: handleCloseSnackbar,\n      message: snackbarMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(JefeView, \"Liip/7Rs0fPFjsbqRg09LU5NK8M=\");\n_c = JefeView;\nexport default JefeView;\nvar _c;\n$RefreshReg$(_c, \"JefeView\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","FormControl","Table","TableBody","TableCell","TableHead","TableRow","IconButton","Snackbar","DeleteIcon","XLSX","axios","jsxDEV","_jsxDEV","JefeView","_s","formData","setFormData","NoTela","Talla","Color","Estilo","Estado","inventarios","setInventarios","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","fetchInventarios","response","get","data","error","console","handleChange","e","target","name","value","handleSubmit","post","handleDelete","id","delete","handleExportExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","handleCloseSnackbar","style","display","flexDirection","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","width","label","onChange","margin","variant","color","onClick","marginTop","open","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["C:/Users/josue/Desktop/produccion/front-end/src/components/OperarioView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, FormControl, Table, TableBody, TableCell, TableHead, TableRow, IconButton, Snackbar } from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport * as XLSX from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nconst JefeView = () => {\r\n  const [formData, setFormData] = useState({\r\n    NoTela: '',\r\n    Talla: '',\r\n    Color: '',\r\n    Estilo: '',\r\n    Estado: ''\r\n  });\r\n\r\n  const [inventarios, setInventarios] = useState([]);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false); // Estado para el Snackbar\r\n  const [snackbarMessage, setSnackbarMessage] = useState(''); // Mensaje del Snackbar\r\n\r\n  // Obtener los datos de la base de datos cuando el componente se monte\r\n  useEffect(() => {\r\n    fetchInventarios();\r\n  }, []);\r\n\r\n  const fetchInventarios = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/inventario');\r\n      setInventarios(response.data);\r\n    } catch (error) {\r\n      console.error('Error al obtener inventarios:', error);\r\n    }\r\n  };\r\n\r\n  // Manejar cambios en el formulario\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Enviar el formulario para guardar los datos en la base de datos\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/inventario', formData);\r\n      fetchInventarios(); // Volver a obtener los datos para que la tabla se actualice\r\n      setFormData({ NoTela: '', Talla: '', Color: '', Estilo: '', Estado: '' }); // Limpiar el formulario\r\n      setSnackbarMessage('Inventario guardado exitosamente'); // Definir el mensaje\r\n      setOpenSnackbar(true); // Abrir el Snackbar\r\n    } catch (error) {\r\n      console.error('Error al guardar inventario:', error);\r\n      setSnackbarMessage('Error al guardar el inventario');\r\n      setOpenSnackbar(true);\r\n    }\r\n  };\r\n\r\n  // Eliminar un inventario por su ID\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/inventario/${id}`);\r\n      fetchInventarios(); // Volver a obtener los datos para que la tabla se actualice\r\n      setSnackbarMessage('Inventario eliminado exitosamente');\r\n      setOpenSnackbar(true);\r\n    } catch (error) {\r\n      console.error('Error al eliminar inventario:', error);\r\n      setSnackbarMessage('Error al eliminar el inventario');\r\n      setOpenSnackbar(true);\r\n    }\r\n  };\r\n\r\n  // Exportar la tabla a un archivo Excel\r\n  const handleExportExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(inventarios);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Inventarios');\r\n    XLSX.writeFile(workbook, 'inventarios.xlsx');\r\n  };\r\n\r\n  // Manejar el cierre del Snackbar\r\n  const handleCloseSnackbar = () => {\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <h1>Inventario</h1>\r\n      <FormControl style={{ width: '50%' }}>\r\n        <TextField\r\n          label=\"No. de Tela\"\r\n          name=\"NoTela\"\r\n          value={formData.NoTela}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Talla\"\r\n          name=\"Talla\"\r\n          value={formData.Talla}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Color\"\r\n          name=\"Color\"\r\n          value={formData.Color}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Estilo\"\r\n          name=\"Estilo\"\r\n          value={formData.Estilo}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Estado\"\r\n          name=\"Estado\"\r\n          value={formData.Estado}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} style={{ marginTop: '10px' }}>\r\n          Guardar\r\n        </Button>\r\n      </FormControl>\r\n\r\n      {/* Snackbar para mostrar mensajes de guardado/eliminación */}\r\n      <Snackbar\r\n        open={openSnackbar}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        message={snackbarMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JefeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}